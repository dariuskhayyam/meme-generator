{"version":3,"sources":["components/Header.js","components/memeGenerator.js","App.js","index.js"],"names":["style","textAlign","fontSize","Header","MemeGenerator","handleChange","event","target","name","value","setState","handleGen","preventDefault","max","state","allMemeImages","length","img","Math","floor","random","randomImage","url","topText","bottomText","fetch","then","response","json","memes","data","display","justifyContent","margin","type","this","onChange","justifySelf","onClick","position","color","src","alt","marginLeft","marginRight","width","top","right","left","fontFamily","textShadow","bottom","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"wIAEMA,EAAQ,CACVC,UAAU,SACVC,SAAS,QAWEC,MARf,WACI,OACI,6BACI,wBAAIH,MAAOA,GAAX,yB,mCC2GGI,E,kDAjHX,aAAc,IAAD,8BACT,gBAmBJC,aAAe,SAACC,GAAU,IAAD,EACDA,EAAMC,OAArBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACX,EAAKC,SAAL,eACKF,EAAOC,KAvBH,EA2BbE,UAAY,SAACL,GACTA,EAAMM,iBACN,IAAIC,EAAM,EAAKC,MAAMC,cAAcC,OAAS,EAExCC,EAAMC,KAAKC,MAAMD,KAAKE,UAAYP,EAD5B,EACwC,GADxC,GAEV,EAAKH,SAAS,CACVW,YAAa,EAAKP,MAAMC,cAAcE,GAAKK,OA/B/C,EAAKR,MAAQ,CACTS,QAAQ,GACRC,WAAW,GACXH,YAAY,gCACZN,cAAe,IANV,E,gEAUO,IAAD,OACfU,MAAM,qCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAY,IACPE,EAASF,EAASG,KAAlBD,MACP,EAAKnB,SAAS,CAACK,cAAec,S,+BAiEtC,OACI,yBAAK7B,MAAO,CAAC+B,QAAS,YAClB,8BAEI,yBAAK/B,MA7CE,CACf+B,QAAQ,OACRC,eAAe,gBACfC,OAAQ,SA2CI,8BACI,4CADJ,IAC6B,6BACzB,2BAAOC,KAAK,OAAO1B,KAAK,UAAUC,MAAO0B,KAAKrB,MAAMS,QAASa,SAAUD,KAAK9B,gBAGhF,4BAAQL,MA9CH,CACjB+B,QAAQ,OACRM,YAAY,UA4C6BC,QAASH,KAAKxB,WAA3C,aAEA,8BACI,+CADJ,IACgC,6BAC5B,2BAAOuB,KAAK,OAAO1B,KAAK,aAAaC,MAAO0B,KAAKrB,MAAMU,WAAYY,SAAUD,KAAK9B,kBAQ9F,yBAAKL,MAhDK,CACduC,SAAU,WACVtC,UAAW,SACXuC,MAAO,UA8CC,yBAAKC,IAAKN,KAAKrB,MAAMO,YAAaqB,IAAI,OAAO1C,MAvDxC,CACb+B,QAAS,QACTY,WAAY,OACZC,YAAa,OACbC,MAAO,SAoDC,wBAAI7C,MA7CJ,CACRuC,SAAU,WACVO,IAAK,EACLC,MAAO,MACPC,KAAM,MACNC,WAAW,+BACXT,MAAO,QACPU,WAAY,wBAsCaf,KAAKrB,MAAMS,SAC5B,wBAAIvB,MArCD,CACXuC,SAAU,WACVY,OAAQ,EACRJ,MAAO,MACPC,KAAM,MACN/C,UAAU,SACVgD,WAAW,+BACXT,MAAO,QACPU,WAAY,wBA6BgBf,KAAKrB,MAAMU,kB,GA3GvB4B,IAAMC,WCUnBC,MATf,WACI,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,QCHZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.c9e1ab78.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst style = {\r\n    textAlign:\"center\",\r\n    fontSize:\"3rem\",\r\n}\r\n\r\nfunction Header(){\r\n    return(\r\n        <div>\r\n            <h1 style={style}>Make Your Own Meme!</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\n\r\nclass MemeGenerator extends React.Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            topText:\"\",\r\n            bottomText:\"\",\r\n            randomImage:\"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImages: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(response => response.json())\r\n            .then(response =>{\r\n                const {memes} = response.data\r\n                this.setState({allMemeImages: memes})\r\n            }\r\n            )\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        let {name, value} = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleGen = (event) =>{\r\n        event.preventDefault()\r\n        let max = this.state.allMemeImages.length - 1\r\n        let min = 0\r\n        let img = Math.floor(Math.random() * (max - min + 1) + min)\r\n        this.setState({\r\n            randomImage: this.state.allMemeImages[img].url\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        const formStyles = {\r\n            display:\"flex\",\r\n            justifyContent:\"space-between\",\r\n            margin: \"5rem\",\r\n        }\r\n        const buttonStyles = {\r\n            display:\"flex\",\r\n            justifySelf:\"center\"\r\n        }\r\n        const imgStyle = {\r\n            display: \"block\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            width: \"50%\"\r\n        }\r\n        const container = {\r\n            position: \"relative\",\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n        }\r\n        const top = {\r\n            position: \"absolute\",\r\n            top: 8,\r\n            right: \"25%\",\r\n            left: \"25%\",\r\n            fontFamily:\"Impact, Charcoal, sans-serif\",\r\n            color: \"white\",\r\n            textShadow: \"2px 2px 4px #000000\"\r\n        }\r\n        const bottom = {\r\n            position: \"absolute\",\r\n            bottom: 8,\r\n            right: \"25%\",\r\n            left: \"25%\",\r\n            textAlign:\"center\",\r\n            fontFamily:\"Impact, Charcoal, sans-serif\", \r\n            color: \"white\",\r\n            textShadow: \"2px 2px 4px #000000\"\r\n        }\r\n        \r\n\r\n        return(\r\n            <div style={{display: \"flexbox\"}}>\r\n                <form>\r\n\r\n                    <div style={formStyles}>\r\n                        <span>\r\n                            <label>Top Text:</label> <br />\r\n                            <input type=\"text\" name=\"topText\" value={this.state.topText} onChange={this.handleChange}/>\r\n                        </span>\r\n\r\n                        <button style={buttonStyles} onClick={this.handleGen}>Genarate!</button>\r\n                        \r\n                        <span>\r\n                            <label>Bottom Text:</label> <br />\r\n                            <input type=\"text\" name=\"bottomText\" value={this.state.bottomText} onChange={this.handleChange}/>\r\n                        </span>\r\n                    </div>\r\n\r\n                    \r\n\r\n                </form>\r\n                \r\n                <div style={container}>\r\n                    <img src={this.state.randomImage} alt=\"meme\" style={imgStyle}></img>\r\n                    <h2 style={top}>{this.state.topText}</h2>\r\n                    <h2 style={bottom}>{this.state.bottomText}</h2>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator","import React from \"react\"\r\nimport Header from \"./components/Header\"\r\nimport MemeGenerator from \"./components/memeGenerator\"\r\nfunction App(){\r\n    return(\r\n        <div>\r\n            <Header />\r\n            <MemeGenerator />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}